var search_data = {"index":{"searchIndex":["digest","xsr","middleware","requestcontext","call()","controller()","controller=()","mdp_request_id()","method_missing()","new()","reset()","set_mdp_request_id()","set_tracking_id()","tracking_id()","gemfile","gemfile.lock","readme","xsr_middleware.gemspec"],"longSearchIndex":["digest","xsr","xsr::middleware","xsr::requestcontext","xsr::middleware#call()","xsr::requestcontext#controller()","xsr::requestcontext#controller=()","xsr::requestcontext#mdp_request_id()","xsr::requestcontext::method_missing()","xsr::middleware::new()","xsr::requestcontext#reset()","xsr::requestcontext#set_mdp_request_id()","xsr::requestcontext#set_tracking_id()","xsr::requestcontext#tracking_id()","","","",""],"info":[["Digest","","Digest.html","",""],["Xsr","","Xsr.html","","<p>This middleware helps with tracking users accross multiple requests and\nservices (anonymously):\n - by ...\n"],["Xsr::Middleware","","Xsr/Middleware.html","",""],["Xsr::RequestContext","","Xsr/RequestContext.html","","<p>The main responsability of the RequestContext class is to take care of the\ntracking_id\nwhich is being ...\n"],["call","Xsr::Middleware","Xsr/Middleware.html#method-i-call","(env)",""],["controller","Xsr::RequestContext","Xsr/RequestContext.html#method-i-controller","()",""],["controller=","Xsr::RequestContext","Xsr/RequestContext.html#method-i-controller-3D","( controller )","<p>TODO : This class should not know anything about the controller.\nThis code\nbelongs to dpplus and mdp_backoffice. ...\n"],["mdp_request_id","Xsr::RequestContext","Xsr/RequestContext.html#method-i-mdp_request_id","()",""],["method_missing","Xsr::RequestContext","Xsr/RequestContext.html#method-c-method_missing","(method,*args,&block)",""],["new","Xsr::Middleware","Xsr/Middleware.html#method-c-new","(app)",""],["reset","Xsr::RequestContext","Xsr/RequestContext.html#method-i-reset","()",""],["set_mdp_request_id","Xsr::RequestContext","Xsr/RequestContext.html#method-i-set_mdp_request_id","(mdp_request_id)","<p>Adds the mdp request id to the current Thread\nand passes it to the logger\n<p>mdp_request_id = an encoded …\n\n"],["set_tracking_id","Xsr::RequestContext","Xsr/RequestContext.html#method-i-set_tracking_id","(tracking_id)","<p>Adds the tracking_id to the current Thread\nand passes it to the logger.\n<p>tracking_id = an encoded string …\n\n"],["tracking_id","Xsr::RequestContext","Xsr/RequestContext.html#method-i-tracking_id","()",""],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p>ruby &#39;2.1.3&#39;\n<p>gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  xsr (1.1.0)\n    log4r (= 1.1.10)</pre>\n<p>GEM\n"],["README","","README_md.html","","<p>Cross Service Request Middleware\n<p>Description\n<p>A middleware used to follow a user&#39;s path (anonymously) …\n"],["xsr_middleware.gemspec","","xsr_middleware_gemspec.html","","<p>Gem::Specification.new do |s|\n\n<pre>s.name         = &#39;xsr&#39;\ns.version      = &#39;1.1.0&#39;\ns.date         = &#39;2014-09-30&#39; ...</pre>\n"]]}}